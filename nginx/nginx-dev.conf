events {

}

http {

  server_tokens	off;
  sendfile		on;
  tcp_nopush		on;
  tcp_nodelay		on;
  ssi			off;
  server_names_hash_bucket_size  64;


  ## Timeouts ##
  ##############

  client_body_timeout	25;
  client_header_timeout	25;
  keepalive_timeout	25 25;
  send_timeout		15s;
  resolver_timeout	3s;

  # Timeout period for connection with FastCGI-server. It should be noted that this value can't exceed 75 seconds.
  fastcgi_connect_timeout 5s;

  # Amount of time for upstream to wait for a fastcgi process to send data.
  # Change this directive if you have long running fastcgi processes that do not produce output until they have finished processing.
  # If you are seeing an upstream timed out error in the error log, then increase this parameter to something more appropriate.
  fastcgi_read_timeout	40s;

  # Request timeout to the server. The timeout is calculated between two write operations, not for the whole request.
  # If no data have been written during this period then serve closes the connection.
  fastcgi_send_timeout	15s;


  ## Buffers ##
  #############

  fastcgi_buffers			8 32k;
  fastcgi_buffer_size		32k;
  #fastcgi_busy_buffers_size	256k;
  #fastcgi_temp_file_write_size	256k;

  open_file_cache			off;

  ####client_body_buffer_size	1K;
  client_header_buffer_size   8k;
  large_client_header_buffers 8 16k;
  types_hash_max_size		2048;


  upstream api {
    server api:8081;
  }

  upstream client {
    server client:5173;
  }

  server {
      listen 80;
      server_name localhost;

      location / {
          proxy_pass http://client;
          # include /etc/nginx/proxy-params;
          client_max_body_size  105m;
      }

      location /backend/ {
        proxy_pass http://api;
        # include /etc/nginx/proxy-params;
        client_max_body_size  105m;
      }
  }
}

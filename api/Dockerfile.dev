FROM openjdk:17-jdk-slim

RUN apt-get update && \
    apt-get install -y nano

WORKDIR /app

#Option 1
#COPY target/api-0.0.1-SNAPSHOT.jar /app.jar

#Option 2, delete till COPY src ./src if it used to be the option 1
COPY .mvn/ .mvn
COPY mvnw pom.xml ./
RUN chmod +x mvnw
RUN ./mvnw dependency:go-offline

COPY . .

RUN cp .env.dev .env

#Option 1 If I want to use the build file
#CMD ["java","-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005","-Dspring.profiles.active=dev","-jar","/app.jar"]

#Option 2
# The maven command itself is stealing the debug port before spring can run and use it. The solution is to define it here instead in docker-compose
ENTRYPOINT ["./mvnw", "spring-boot:run", "-Dspring-boot.run.jvmArguments=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"]
